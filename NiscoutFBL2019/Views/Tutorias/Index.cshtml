@model IEnumerable<NiscoutFBL2019.Models.Persona>

@{
    ViewBag.Title = "Index";

    <style>
        .login100-form-title {
            font-weight: bold;
            font-family: Poppins-Bold;
            font-size: 30px;
            color: #333333;
            line-height: 1.2;
            text-align: center;
            width: 100%;
        }

        .input100 {
            border: none;
            font-family: Poppins-Medium;
            font-size: 20px;
            line-height: 1.5;
            color: #333333;
            display: block;
            width: 100%;
            background: #e6e6e6;
            height: 45px;
            border-radius: 15px;
            padding: 0 20px 0 53px;
        }


        .form-group {
            position: relative;
            width: 95%;
            z-index: 1;
            margin-bottom: 10px;
        }

        .control-label {
            font-weight: bold;
            color: #333333;
            font-size: 18px;
        }
    </style>
}
<div class="card-header card-header-tabs" style="box-shadow: 0 0 1px 0 ; background-color: transparent">
    <h3 style="font-family:'Times New Roman'"><strong> @Model.Count() Registros de Tutores </strong>  </h3>
    <h4 style="font-family:'Times New Roman'"> @Model.Count(x => x.Sexo == "Femenino") Mujeres | @Model.Count(x => x.Sexo == "Masculino")  Hombres</h4>
</div>
<div align="left">
    @using (Html.BeginForm("Index", "Tutorias", FormMethod.Get))
    {
    <div align="right">

        <div>
            <hr />

            <a href="@Url.Action("Create", "Personas")" class="btn waves-effect waves-light btn-outline-info hidden-md-down" title="Agregar Nuevo Tutor">
                Nuevo <img width="25" src="@Url.Content("~/Content/Ico/Nuevo.png")" />
            </a>
            <a href="@Url.Action("RepAdulto", "Tutorias")" target="_blank" class="btn waves-effect waves-light btn-outline-success hidden-md-down" title="Imprimir Registros">
                <img width="25" src="@Url.Content("~/Content/Ico/imprimir.png")" />
            </a>

            <hr />
        </div>
    </div>
    }
</div>


<div class="row">
    <!-- Column -->
    @if (Model.Count() == 0)
    {

        <h2>  No se ha encontrado ningún dato relacionado</h2>

    }
    else
    {
        foreach (var item in Model.OrderBy(x => x.Apellidos))
        {
            <div class="col-lg-4 col-xlg-3 col-md-5">
                <div class="card">
                    <div class="card-body" style="border-radius: 20px;box-shadow: 0 0 5px 0 mediumpurple; background-color: transparent">
                        <center class="m-t-30">
                            <img src="~/Content/assets/images/Usuario icon.png" class="img-circle" width="150" />
                            <h4 class="card-title m-t-10">  @item.Apellidos, @item.Nombres </h4>
                            <h6 class="card-subtitle">@item.E_Mail</h6>
                            <h6 class="card-subtitle">@item.Departamento.Nombre_Departamento</h6>
                            <div class="row text-center justify-content-md-center">

                                <div class="col-4"><a href="@Url.Action("Edit", "Personas",new { id = item.Id })" style="font-size:25px" class="link"><i class="icon-pencil" title="Editar Registro"></i> <font class="font-medium"></font></a></div>
                                <div class="col-4"><a href="@Url.Action("Details", "Tutorias",new { id = item.Id })" style="font-size:25px" class="link" target="_blank"><i class="icon-eye" title="Ver Registro"></i> <font class="font-medium"></font></a></div>
                                <div class="col-4"><a href="@Url.Action("Create", "Tutorias",new { idpersona = item.Id })" style="font-size:25px" class="link" title="Agregar Jóven" target="_blank"><i class="fa  fa-user-plus "></i> <font class="font-medium"></font></a></div>

                            </div>
                        </center>
                    </div>
                </div>
            </div>
        }
    }
</div>

<!-- visit charts-->
<!-- ============================================================== -->
<div class="row">
    <div class="col-lg-4 col-xlg-3 col-md-5">
        <div class="card">
            <div class="card-body" style="border-radius: 20px;box-shadow: 0 0 5px 0; background-color: transparent">
                <center class="m-t-30">
                    <h4 class="card-title"><span class="lstick"></span>Estadística</h4>
                    <div id="visitor" style="height:250px; width:100%;"></div>
                </center>
            </div>
        </div>
    </div>
    <div class="col-lg-8 col-xlg-9 col-md-7" style="box-shadow: 0px 1px 3px">
        <div class="card">
            <div class="card-body">              
                
                    <div id="sales-overview2" class="p-relative" style="height:360px;"></div>

                
            </div>
        </div>
    </div>
</div>

                @section Scripts {
                    <script type="text/javascript">

                        $(function () {
                            "use strict";
                            // ==============================================================
                            // Sales overview
                            // ==============================================================
                            var meses = [];
                            var valores = [];
                            @foreach(var item in Model)
            {
                @:meses.push('@item.Nombres')
                                            @:valores.push('@item.Tutorias.Count()')
                                        }
                            new Chartist.Line('#sales-overview2', {
                                labels: meses
                   , series: [
                     { meta: "Tutorías", data: valores }
                   ]
                            }, {
                                low: 0
                   , high: 10
                   , showArea: true
                   , divisor: 1
                   , lineSmooth: false
                   , fullWidth: true
                   , showLine: true
                   , chartPadding: 30
                   , axisX: {
                       showLabel: true
                       , showGrid: false
                       , offset: 50
                   }
                   , plugins: [
                       Chartist.plugins.tooltip()
                   ],
                                // As this is axis specific we need to tell Chartist to use whole numbers only on the concerned axis
                                axisY: {
                                    onlyInteger: true
                                    , showLabel: true
                                    , scaleMinSpace: 50
                                    , showGrid: true
                                    , offset: 10,
                                    labelInterpolationFnc: function (value) {
                                        return (value)
                                    },

                                }

                            });
                            // ==============================================================
                            // Visitor
                            // ==============================================================

                            var chart = c3.generate({
                                bindto: '#visitor',
                                data: {
                                    columns: [

                                        @foreach(var item in Model)
                        {
                          @:['@item.Nombres', @item.Tutorias.Count()],
                                        }

                                        //['Other', 30],
                                        //['Desktop', 10],
                                        //['Tablet', 40],
                                        //['Mobile', 50],
                                    ],

                                    type: 'donut',
                                    onclick: function (d, i) { console.log("onclick", d, i); },
                                    onmouseover: function (d, i) { console.log("onmouseover", d, i); },
                                    onmouseout: function (d, i) { console.log("onmouseout", d, i); }
                                },
                                donut: {
                                    label: {
                                        show: false
                                    },
                                    title: "Tutorías",
                                    width: 30,

                                },

                                legend: {
                                    hide: true
                                    //or hide: 'data1'
                                    //or hide: ['data1', 'data2']
                                },
                                color: {
                                    pattern: ['#eceff1', '#745af2', '#26c6da', '#1e88e5']
                                }
                            });

                            // ==============================================================
                            // Website Visitor
                            // ==============================================================

                            var chart = new Chartist.Line('.website-visitor', {
                                labels: [1, 2, 3, 4, 5, 6, 7, 8],
                                series: [
                                  [0, 5, 6, 8, 25, 9, 8, 24]
                                  , [0, 3, 1, 2, 8, 1, 5, 1]
                                ]
                            }, {
                                low: 0,
                                high: 28,
                                showArea: true,
                                fullWidth: true,
                                plugins: [
                                  Chartist.plugins.tooltip()
                                ],
                                axisY: {
                                    onlyInteger: true
                                , scaleMinSpace: 40
                                , offset: 20
                                , labelInterpolationFnc: function (value) {
                                    return (value / 1) + 'k';
                                }
                                },
                            });
                            // Offset x1 a tiny amount so that the straight stroke gets a bounding box
                            // Straight lines don't get a bounding box
                            // Last remark on -> http://www.w3.org/TR/SVG11/coords.html#ObjectBoundingBox
                            chart.on('draw', function (ctx) {
                                if (ctx.type === 'area') {
                                    ctx.element.attr({
                                        x1: ctx.x1 + 0.001
                                    });
                                }
                            });

                            // Create the gradient definition on created event (always after chart re-render)
                            chart.on('created', function (ctx) {
                                var defs = ctx.svg.elem('defs');
                                defs.elem('linearGradient', {
                                    id: 'gradient',
                                    x1: 0,
                                    y1: 1,
                                    x2: 0,
                                    y2: 0
                                }).elem('stop', {
                                    offset: 0,
                                    'stop-color': 'rgba(255, 255, 255, 1)'
                                }).parent().elem('stop', {
                                    offset: 1,
                                    'stop-color': 'rgba(38, 198, 218, 1)'
                                });
                            });
                        });
                    </script>
                }
